# Automatically generated by Pynguin.
import src.display_number as module_0


def test_case_0():
    try:
        int_0 = 414
        tuple_0 = None
        list_0 = [int_0, tuple_0, int_0]
        number_display_0 = module_0.NumberDisplay(int_0, list_0)
        assert number_display_0.value == 414
        assert number_display_0.limit == [414, None, 414]
        var_0 = number_display_0.str()
        assert var_0 == '414'
        str_0 = '6%$0j'
        bool_0 = True
        dict_0 = {bool_0: bool_0, str_0: str_0, str_0: str_0}
        number_display_1 = module_0.NumberDisplay(str_0, dict_0)
        assert number_display_1.value == '6%$0j'
        assert number_display_1.limit == {(True): True, '6%$0j': '6%$0j'}
        var_1 = number_display_1.clone()
        assert var_1.value == '6%$0j'
        assert var_1.limit == {(True): True, '6%$0j': '6%$0j'}
        var_2 = number_display_1.str()
    except BaseException:
        pass


def test_case_1():
    try:
        bytes_0 = b'=\x13\xd3\xef\xd0D\x1aC\x17G\xd4\xb4S\x15\x87$\x1c'
        dict_0 = {}
        number_display_0 = module_0.NumberDisplay(bytes_0, dict_0)
        assert number_display_0.value == b'=\x13\xd3\xef\xd0D\x1aC\x17G\xd4\xb4S\x15\x87$\x1c'
        assert number_display_0.limit == {}
        var_0 = number_display_0.str()
    except BaseException:
        pass


def test_case_2():
    try:
        bytes_0 = b'\x1b\xd8P\xcc\x83UZ'
        str_0 = ';2#}v`Jp/110IYaAL\x0cD'
        bytes_1 = b'\x0f\x91N\x85(\x8d\xef\xf1{U\x18\xf5\xe2'
        tuple_0 = str_0, bytes_1
        number_display_0 = module_0.NumberDisplay(bytes_0, tuple_0)
        assert number_display_0.value == b'\x1b\xd8P\xcc\x83UZ'
        assert number_display_0.limit == (';2#}v`Jp/110IYaAL\x0cD',
            b'\x0f\x91N\x85(\x8d\xef\xf1{U\x18\xf5\xe2')
        var_0 = number_display_0.increase()
    except BaseException:
        pass
