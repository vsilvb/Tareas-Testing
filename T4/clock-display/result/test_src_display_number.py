# Automatically generated by Pynguin.
import src.display_number as module_0


def test_case_0():
    str_0 = 'x5h%h'
    list_0 = [str_0, str_0, str_0, str_0]
    number_display_0 = module_0.NumberDisplay(str_0, list_0)
    assert number_display_0.value == 'x5h%h'
    assert number_display_0.limit == ['x5h%h', 'x5h%h', 'x5h%h', 'x5h%h']
    var_0 = number_display_0.reset()
    assert number_display_0.value == 0
    bool_0 = True
    str_1 = "3h\x0cn65tk[=13\t.$')"
    number_display_1 = module_0.NumberDisplay(bool_0, str_1)
    assert number_display_1.value is True
    assert number_display_1.limit == "3h\x0cn65tk[=13\t.$')"
    var_1 = number_display_1.clone()
    assert var_1.value is True
    assert var_1.limit == "3h\x0cn65tk[=13\t.$')"
    var_2 = number_display_1.str()
    assert var_2 == '0True'
    assert var_0 is None
    var_3 = number_display_1.str()
    assert var_3 == '0True'


def test_case_1():
    int_0 = -308
    bool_0 = False
    number_display_0 = module_0.NumberDisplay(int_0, bool_0)
    assert number_display_0.value == -308
    assert number_display_0.limit is False
    var_0 = number_display_0.invariant()
    assert var_0 is True


def test_case_2():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    list_1 = [list_0]
    number_display_0 = module_0.NumberDisplay(list_1, bool_0)
    assert number_display_0.value == [[True, True, True]]
    assert number_display_0.limit is True
    number_display_1 = module_0.NumberDisplay(number_display_0, list_0)
    assert number_display_1.limit == [True, True, True]
    var_0 = number_display_1.clone()
    assert var_0.limit == [True, True, True]
